namespace testapi.flatbuffers;

table Simple {
  n: int;
  s: string;
}

table FiveFields {
  n1: int;
  s1: string;
  n2: long;
  s2: string;
  n3: double;
}

table ManyTables {
  n: int;
  x: Simple;
  y: Simple;
  z: Simple;
}

enum Color:ubyte { Red = 0, Green, Blue = 2, Gray = 5, Black = 8 }

union Union { UnionA, UnionB }
table UnionA { x: string; }
table UnionB { y: int; }

table UnionByteBool {
  color: Color;
  color2: Color = Blue;
  uni1: Union;
  uni2: Union;
  uni3: Union;
  uni4: Union;
  boo: bool;
}

table Vectors {
  w: [int];
  x: [int];
  y: [string];
  z: [long];
}

struct RegularStruct {
  x: int;
  y: uint;
}

struct IrregularStruct {
  w: int;
  x: ubyte;
  y: long;
  z: bool;
}

struct WithNestedStruct {
  x: RegularStruct;
  y: IrregularStruct;
}

table Structs {
  w: RegularStruct;
  x: RegularStruct;
  y: IrregularStruct;
  z: WithNestedStruct;
}

table VectorOfTables {
  xs: [Simple];
}

